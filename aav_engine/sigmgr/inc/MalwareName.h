#ifndef _MALWARENAME_H_
#define _MALWARENAME_H_

#include <stdint.h>

#pragma pack(push, 1)

struct MALWARE_NAME {
  uint32_t id;
  uint8_t type;
  uint8_t reserve;  // padding
  uint8_t platform;
  uint8_t file_format;
  uint32_t family;
  uint32_t variant;
};

struct MALWARE_FAMILY {
  uint32_t id;
  uint8_t name[1];
};

enum MALWARE_TYPE {
  MALWARE_TYPE_UNKNOWN = 0,
  MALWARE_TYPE_TROJAN,
  MALWARE_TYPE_VIRUS,
  MALWARE_TYPE_WORM,
  MALWARE_TYPE_BACKDOOR,
  MALWARE_TYPE_ADWARE,
  MALWARE_TYPE_HACK,
  MALWARE_TYPE_EXPLOIT,
  MALWARE_TYPE_DOWNLOADER,
  MALWARE_TYPE_DROPPER,
  MALWARE_TYPE_HARM,
  MALWARE_TYPE_JOKE,
  MALWARE_TYPE_SCRIPT,
  MALWARE_TYPE_MARCRO,
};

enum MALWARE_PLATFORM {
  MALWARE_PLATFORM_UNKNOWN = 0,
  MALWARE_PLATFORM_ANDROID,
  MALWARE_PLATFORM_IOS,
  MALWARE_PLATFORM_WP,
  MALWARE_PLATFORM_LINUX,
  MALWARE_PLATFORM_MAC,
  MALWARE_PLATFORM_WIN,
};

enum MALWARE_FILE_FORMAT {
  MALWARE_FILE_FORMAT_UNKNOWN = 0,
  MALWARE_FILE_FORMAT_DEX,
  MALWARE_FILE_FORMAT_OAT,
  MALWARE_FILE_FORMAT_ELF,
  MALWARE_FILE_FORMAT_MACHO,
  MALWARE_FILE_FORMAT_PE,
};

struct SIG_NAME {
  uint32_t sig_id;
  uint32_t name_id;
};

#pragma pack(pop)

#endif
